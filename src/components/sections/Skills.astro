---
import Section from "../Section.astro";
import cv from "@cv";

interface Tech {
  name: string;
  level?: string;
  category?: string;
}

const stack = ((cv as any).techStack || []) as Tech[];

const ICONS = {
  React: `<svg viewBox="0 0 24 24" width="28" height="28" fill="none" stroke="#61dafb" stroke-width="1.4"><circle cx="12" cy="12" r="1.6"/><ellipse rx="11" ry="4.2" cx="12" cy="12" transform="rotate(60 12 12)" stroke="#61dafb"/><ellipse rx="11" ry="4.2" cx="12" cy="12" transform="rotate(-60 12 12)" stroke="#61dafb"/><ellipse rx="11" ry="4.2" cx="12" cy="12" stroke="#61dafb"/></svg>`,
  HTML5: `<svg viewBox="0 0 128 128" width="28" height="28"><path fill="#E44D26" d="M19 0l9 102 36 10 36-10 9-102z"/><path fill="#F16529" d="M64 116l29-8 8-90H64z"/><path fill="#EBEB" d="M64 52H48l-1-12h17V28H33l3 36h28zM64 88l-.1.1-13.5-3.6-.9-10.4H38l1.8 21 24.1 6.7.1-.1z"/><path fill="#FFF" d="M64 52V40h17l-1 12zm0 36v12l24.1-6.7 2.2-24.3H77.5l-.9 10.5z"/></svg>`,
  CSS3: `<svg viewBox="0 0 128 128" width="28" height="28"><path fill="#1572B6" d="M19 0l9 102 36 10 36-10 9-102z"/><path fill="#33A9DC" d="M64 116l29-8 8-90H64z"/><path fill="#fff" d="M64 52H48l-1-12h17V28H33l3 36h28zM64 88l-.1.1-13.5-3.6-.9-10.4H38l1.8 21 24.1 6.7.1-.1z"/><path fill="#E6E6E6" d="M64 52V40h17l-1 12zM64 88v12l24.1-6.7 2.2-24.3H77.5l-.9 10.5z"/></svg>`,
  JavaScript: `<svg viewBox="0 0 128 128" width="28" height="28"><path fill="#f7df1e" d="M2 2h124v124H2z"/><path d="M86 108c-3.6 0-6.6-1.5-8.6-4.8l7.4-4.5c1 1.6 2.1 2.2 3.8 2.2 1.6 0 2.6-.6 2.6-2.9V61h9v37.1c0 9.2-5.4 9.9-14.2 9.9zM55.6 107.8c-8.8 0-14.4-4.2-17.1-9.7l7.7-4.5c2 3.3 4.2 5.7 8.9 5.7 3.7 0 6-1.8 6-4.2 0-2.9-2.3-3.9-6.5-5.6l-2.2-.9c-6.4-2.7-10.6-6.1-10.6-13.2 0-6.6 5-11.6 12.8-11.6 5.6 0 9.7 1.9 12.6 7l-7.4 4.7c-1.6-2.9-3.3-4-5.2-4-2.4 0-4 1.5-4 4 0 2.8 1.5 3.8 4.9 5.3l2.2.9c7.5 3.2 11.7 6.5 11.7 13.8-.1 7.9-6.2 11.2-13.8 11.2z"/></svg>`,
  Astro: `<svg viewBox="0 0 256 256" width="28" height="28"><path fill="#FF5D01" d="M167 215c-15 13-32 19-51 19-33 0-62-21-73-52 8 7 18 11 29 11 23 0 42-19 42-42 0-8-2-15-6-22 9 17 27 29 47 29 23 0 43-15 49-36 2 6 3 13 3 20 0 30-17 58-40 73z"/><path fill="#000" d="M91 31c2-5 5-8 11-8h52c6 0 9 3 11 8l28 88c-18-7-36-11-55-11-19 0-38 4-56 11l9-28h52l-17-53-35 110c-18 7-31 18-37 34-1-3-2-7-2-11 0-5 1-10 2-14l37-116z"/></svg>`,
  Tailwind: `<svg viewBox="0 0 256 154" width="28" height="28"><path fill="#38BDF8" d="M128 0c-35 0-57 18-66 54 13-18 28-25 46-21 10 2 17 9 25 17 13 14 28 30 61 30 35 0 57-18 66-54-13 18-28 25-46 21-10-2-17-9-25-17C176 16 161 0 128 0zM62 80c-35 0-57 18-66 54 13-18 28-25 46-21 10 2 17 9 25 17 13 14 28 30 61 30 35 0 57-18 66-54-13 18-28 25-46 21-10-2-17-9-25-17C110 96 95 80 62 80z"/></svg>`,
  Strapi: `<svg viewBox="0 0 256 256" width="28" height="28"><path fill="#8E75FF" d="M128 0 28 36v92l100 128 100-128V36z"/></svg>`,
  PostgreSQL: `<svg viewBox="0 0 256 256" width="28" height="28"><path fill="#336791" d="M128 16c-44 0-80 29-80 64v32c0 35 36 64 80 64s80-29 80-64V80c0-35-36-64-80-64z"/><path fill="#fff" d="M88 96h80v16H88z"/></svg>`,
  "SQL Server": `<svg viewBox="0 0 256 256" width="28" height="28"><path fill="#B02020" d="M32 208c48 32 144 40 192 0-72 16-120 8-192 0z"/><path fill="#D84040" d="M32 48c72 16 120 8 192 0-48 40-144 32-192 0z"/><path fill="#C83030" d="M32 48v160c72 8 120 16 192 0V48c-72 8-120 16-192 0z"/></svg>`,
  Git: `<svg viewBox="0 0 256 256" width="28" height="28"><path fill="#F05133" d="m247.5 116.6-108-108a21.6 21.6 0 0 0-30.4 0L84.2 33.5l27.2 27.2c8.5-2.8 18.3-.9 25.1 5.9 6.9 6.9 8.7 16.8 5.8 25.4l26.2 26.2c8.6-2.9 18.5-1 25.4 5.9 9.2 9.2 9.2 24.2 0 33.4-9.2 9.2-24.2 9.2-33.4 0-7-7-8.8-17.3-5.3-26l-24.4-24.4-.3 64.3c2.2 1.1 4.3 2.6 6.1 4.4 9.2 9.2 9.2 24.2 0 33.4-9.2 9.2-24.2 9.2-33.4 0-9.2-9.2-9.2-24.2 0-33.4 2.3-2.3 5-4.1 7.9-5.3l.3-64.9c-3-.9-5.8-2.6-8.2-5-7.6-7.6-8.8-19-3.9-28L71.4 57.8 8.5 120.7a21.6 21.6 0 0 0 0 30.4l108 108a21.6 21.6 0 0 0 30.4 0l100.6-100.6a21.6 21.6 0 0 0 0-30.4z"/></svg>`,
} as const;
---

<Section title="Habilidades">
  <ul class="grid">
    {
      stack.map((s) => {
        const svg = ICONS[s.name as keyof typeof ICONS] ?? "";
        return (
          <li class="item">
            <span class="icon" set:html={svg} />
            <div class="meta">
              <strong>{s.name}</strong>
              <small>
                {s.category} â€¢ {s.level}
              </small>
            </div>
          </li>
        );
      })
    }
  </ul>
</Section>

<style>
  .grid {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    gap: 0.9rem;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  }
  .item {
    display: flex;
    gap: 0.6rem;
    align-items: center;
    padding: 0.55rem 0.7rem;
    border: 1px solid #e5e5e5;
    border-radius: 10px;
    background: #fff;
  }
  .icon {
    display: inline-flex;
    width: 32px;
    height: 32px;
    border-radius: 8px;
    background: #f4f6f8;
    align-items: center;
    justify-content: center;
  }
  .meta strong {
    font-size: 0.8rem;
    font-weight: 600;
    letter-spacing: 0.02em;
  }
  .meta small {
    display: block;
    font-size: 0.6rem;
    color: #666;
    letter-spacing: 0.05em;
    margin-top: 2px;
    text-transform: uppercase;
  }
  @media (width <= 600px) {
    .grid {
      grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
    }
  }
</style>
